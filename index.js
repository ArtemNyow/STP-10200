import"./assets/loader-XCenFZM3.js";import{S as n,N as c,E as i}from"./assets/vendor-D04KvAf3.js";const d=document.querySelector('[data-action="open"]'),a=document.querySelector('[data-action="close"]'),s=document.querySelector("[data-visible]"),u=document.querySelectorAll(".js-mobile-nav-item-link");d.addEventListener("click",()=>{s.dataset.visible="open"});a.addEventListener("click",()=>{s.dataset.visible="close"});u.forEach(e=>{e.addEventListener("click",()=>{s.dataset.visible="close"})});document.addEventListener("DOMContentLoaded",()=>{const e=new n(".js-swiper",{modules:[c,i],direction:"vertical",slidesPerView:3,slidesPerGroup:1,resistanceRatio:0,spaceBetween:14,loop:!0,breakpoints:{320:{slidesPerView:3,spaceBetween:14},1200:{slidesPerView:3,spaceBetween:14}}});document.querySelector(".key-btn-up").addEventListener("click",()=>{e.slidePrev()}),document.querySelector(".key-btn-down").addEventListener("click",()=>{e.slideNext()})});document.addEventListener("DOMContentLoaded",()=>{new n(".js-swiper-level",{modules:[c,i],direction:"vertical",slidesPerView:2,slidesPerGroup:1,spaceBetween:15,loop:!0,touchReleaseOnEdges:!0,navigation:{nextEl:".user-swiper-button-next",prevEl:".user-swiper-button-prev"},breakpoints:{1200:{direction:"horizontal",slidesPerView:3,spaceBetween:26}}})});const o=document.getElementById("js-scrollTopBtn");window.addEventListener("scroll",()=>{window.scrollY>300?o.classList.add("show"):o.classList.remove("show")});o.addEventListener("click",()=>{window.scrollTo({top:0,behavior:"smooth"})});document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("js-cookie-banner");localStorage.getItem("cookieChoice")||e.classList.add("show"),document.getElementById("accept-cookies").addEventListener("click",()=>{localStorage.setItem("cookieChoice","accepted"),e.classList.remove("show")}),document.getElementById("decline-cookies").addEventListener("click",()=>{localStorage.setItem("cookieChoice","declined"),e.classList.remove("show")})});const v=document.querySelectorAll(".js-reveal"),r=new IntersectionObserver(e=>{e.forEach((t,l)=>{t.isIntersecting&&(setTimeout(()=>{t.target.classList.add("active")},l*50),r.unobserve(t.target))})},{threshold:.1});v.forEach(e=>r.observe(e));
//# sourceMappingURL=index.js.map
